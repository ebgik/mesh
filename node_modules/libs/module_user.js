var db = require('libs/module_db');
var crypto = require('crypto');
var hash = 'daskjfhsdkjfhasdkjfhsdfksdf';

exports.checkUser = function(email,pass,callback) {
	var pass = crypto.createHash('md5').update(pass).digest("hex");

	var query = db.query('SELECT * FROM users WHERE email = ? AND pass = ?',[email, pass], function(err,result) {
	  if (err)
	  	callback('error');
	  else
	  	if (result[0]) 
	  		callback(result[0]);
	  	else callback('none');
	});
}


exports.sendSession = function(user,callback){
	var sessionStr = user.email+user.pass+hash;
	var session =  crypto.createHash('md5').update(sessionStr).digest("hex");
	var query = db.query('INSERT INTO sessions SET user_id = ?, session = ?',[user.id,session],function(err,result){
		if (err)
			callback('error');
		else callback(session);
	})

}

exports.deleteSession = function(session,callback){
	var query = db.query('DELETE FROM sessions WHERE session = ?',[session],function(err,result){
		if (err)
			callback('error');
		else callback('success');
	})

}

exports.checkSession = function(session,callback){
	var query = db.query('SELECT * FROM sessions WHERE session = ? LIMIT 1',[session],function(err,result){
		if (err)
			callback('error');
		else
		{
			if (result[0])
			queryUser = db.query('SELECT * FROM users WHERE id = ?',[result[0].user_id],function(errUser,resultUser){
				if (errUser)
					callback('error');
				else callback(resultUser);
			})
			else callback('error')
			
		}
	})
}



exports.getUserInfo = function(id,callback){
	var query = db.query('SELECT name FROM users WHERE id = ? LIMIT 1',[id],function(err,result){
		if (err||!result[0])
			callback('error');
		else callback(result[0]);
	})
}
